// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String

  name String

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  user_pic           String               @default("Leaves.jpg")
  anime              Anime[]
  anime_user_rank    Anime_user_rank[]
  anime_user_planned Anime_user_planned[]
  monthly_planner    Monthly_planner[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Anime {
  id                 Int                  @id @default(autoincrement())
  name               String
  category           String
  description        String               @default("")
  anime_pic          String               @default("Leaves.jpg")
  avg_rank           Float                @default(0)
  amount             Int                  @default(0)
  users              User[]
  anime_user_rank    Anime_user_rank[]
  anime_user_planned Anime_user_planned[]

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model Anime_user_rank {
  id Int @id @default(autoincrement())

  User     User  @relation(fields: [user_id], references: [id])
  user_id  Int
  anime    Anime @relation(fields: [anime_id], references: [id])
  anime_id Int

  rank        String
  description String @default("")
  anime_pic   String @default("Leaves.jpg")

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model Anime_user_planned {
  id Int @id @default(autoincrement())

  User     User  @relation(fields: [user_id], references: [id])
  user_id  Int
  anime    Anime @relation(fields: [anime_id], references: [id])
  anime_id Int

  isPlanned Boolean @default(true)

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model Monthly_planner {
  id Int @id @default(autoincrement())

  User    User @relation(fields: [user_id], references: [id])
  user_id Int

  month String
  year  String

  notes         String               @default("")
  to_do_list    Monthly_to_do_list[]
  daily_planner Daily_planner[]

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model Monthly_to_do_list {
  id Int @id @default(autoincrement())

  Monthly_planner    Monthly_planner @relation(fields: [monthly_planner_id], references: [id])
  monthly_planner_id Int

  data String @default("")
}

model Daily_planner {
  id Int @id @default(autoincrement())

  Monthly_planner    Monthly_planner @relation(fields: [monthly_planner_id], references: [id])
  monthly_planner_id Int

  day     String
  weekday String

  notes          String                 @default("")
  to_do_list     Daily_to_do_list[]
  most_important Daily_most_important[]

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())
}

model Daily_to_do_list {
  id Int @id @default(autoincrement())

  Daily_planner    Daily_planner @relation(fields: [daily_planner_id], references: [id])
  daily_planner_id Int

  data String @default("")
}

model Daily_most_important {
  id Int @id @default(autoincrement())

  Daily_planner    Daily_planner @relation(fields: [daily_planner_id], references: [id])
  daily_planner_id Int

  data String @default("")
}
